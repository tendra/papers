%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 20 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-BoldItalic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 0 /Times-Italic FMFONTDEFINE
5 0 /Courier-Bold FMFONTDEFINE
6 0 /Courier-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
108 81 540 81 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 747 540 747 2 L
7 X
V
3 H
0 Z
0 X
N
108 46.88 342 63 R
7 X
V
0 10 Q
0 X
(7/2/93   watt@osf.org) 108 56.33 T
360 46.88 540 63 R
7 X
V
0 X
(\251 1993 OSF) 360 56.33 T
(1 of 15) 511.69 56.33 T
108 90 540 711 R
7 X
V
1 24 Q
0 X
-1.2 (Porting Oracle with) 207.97 695 S
1 21 Q
-1.05 (ANDF) 385.9 695 S
1 24 Q
-1.2 (Using an Extended Common API) 174.85 665 S
0 12 Q
(Thomas J. W) 275.08 583 T
(att Jr) 342.72 583 T
(.) 369.92 583 T
(Open Softwar) 254.47 551 T
(e Foundation) 325.88 551 T
(Resear) 277.31 535 T
(ch Institute) 312.39 535 T
(June 1993) 298.18 507 T
0 14 Q
(Porting a very large existing application to the) 180 409.67 T
0 11 Q
(ANDF) 180 393.67 T
0 14 Q
( technology pr) 210.51 393.67 T
(esents some special) 295.76 393.67 T
(challenges. After de\336ning an extended common) 180 377.67 T
(API, we compiled several major components of) 180 361.67 T
(the database management system Oracle into) 180 345.67 T
(platform-independent) 180 329.67 T
0 11 Q
(ANDF) 314.87 329.67 T
0 14 Q
(, installed them on) 344.09 329.67 T
(two important platforms, and tested them) 180 313.67 T
(successfully using Oracle\325) 180 297.67 T
(s QA suite.) 333.4 297.67 T
0 11 Q
(1) 398.31 303.27 T
108 237.98 540 241 C
90 239.49 558 239.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(1. Introduction) 108 246.33 T
2 14 Q
(This paper reports on our experience in the OSF Research Institute with) 108 218.64 T
(using the) 108 202.64 T
2 11 Q
(ANDF) 162.42 202.64 T
2 14 Q
( compiler technology to build and execute several parts of) 192.32 202.64 T
(Oracle.) 108 186.64 T
-0.51 (W) 108 158.64 P
-0.51 (e assume that the reader is somewhat familiar with Oracle, and so give only) 120.09 158.64 P
(cursory information about it in the following section.) 108 142.64 T
108 117 540 137.09 C
108 124.99 239.98 124.99 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
2 11 Q
0 X
0 K
(1.  This work was sponsored by a cooperative research agreement between the Open Software) 108 109.67 T
(Foundation \050OSF\051 and Unix System Laboratories \050USL\051.) 118.8 97.67 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Softwar) 108 736.84 T
(e Information) 134.95 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(2 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
2 14 Q
0 X
(Essentially) 108 701.67 T
(, we are pursing the goal of increasing the robustness of the) 168.5 701.67 T
2 11 Q
(ANDF) 504.64 701.67 T
2 14 Q
-0.34 (compiler technology toward an industrial strength level of quality such that it) 108 685.67 P
(delivers product quality for applications across a wide variety of) 108 669.67 T
(heterogeneous platforms. T) 108 653.67 T
(oward that end, we have, to date, successfully) 260.52 653.67 T
(ported two major and three minor functional parts of Oracle using the) 108 637.67 T
2 11 Q
(ANDF) 501.27 637.67 T
2 14 Q
(compiler in a native mode. All components of these parts have been) 108 621.67 T
(compiled, loaded and locally tested within the components directory) 108 605.67 T
-0.21 (structure. The latest code drop from DRA has been used in this ef) 108 589.67 P
-0.21 (fort. Oracle) 472.43 589.67 P
(is but one of a number of industrial strength applications in our robustness) 108 573.67 T
(project plan.) 108 557.67 T
(W) 108 529.67 T
(e have analyzed the Oracle header \336les and prototyped an extended) 120.09 529.67 T
(common API which successfully abstracts the shape of the source code) 108 513.67 T
(beyond the purview of the XPG/3) 108 497.67 T
2 11 Q
(ANDF) 300.76 497.67 T
2 14 Q
( header \336le set in a machine and) 330.66 497.67 T
(platform independent way) 108 481.67 T
(. This extended API is suf) 253.98 481.67 T
(\336cient to use the) 399.08 481.67 T
2 11 Q
(ANDF) 494.69 481.67 T
2 14 Q
-0.25 (compiler to distribute intermediate) 108 465.67 P
2 11 Q
-0.2 (ANDF) 304.42 465.67 P
2 14 Q
-0.25 ( \050) 334.33 465.67 P
3 13 Q
-0.51 -0.65 (.j) 342.23 465.67 B
2 14 Q
-0.25 (\051 \336les which install and properly) 356.52 465.67 P
(execute these parts of Oracle between the above two platforms. All of the) 108 449.67 T
(above mentioned components except one source code \336le in the) 108 433.67 T
0 F
(Rdbms) 468.62 433.67 T
2 F
(component have been compiled into this extended common API) 108 417.67 T
2 11 Q
(ANDF) 470.6 417.67 T
2 14 Q
( \050) 500.5 417.67 T
3 13 Q
-0.65 (.j) 508.66 417.67 S
2 14 Q
-0.11 (\336le\051 format. A temporary workaround utilizes the native mode version of the) 108 401.67 P
(\050) 108 385.67 T
3 13 Q
-0.65 (.j) 112.66 385.67 S
2 14 Q
(\051 intermediate \336le. Further investigation will insure that the API is) 126.94 385.67 T
(suf) 108 369.67 T
(\336cient across a wider set of platforms. The other components have been) 124.85 369.67 T
(subjected to the internal Oracle QA test with successful results.) 108 353.67 T
(In subsequent sections we indicate brie\337y the current status of our porting) 108 325.67 T
(investigation, introduce the notion of an extended common API approach) 108 309.67 T
(with the) 108 293.67 T
2 11 Q
(ANDF) 156.97 293.67 T
2 14 Q
( compiler technology) 186.88 293.67 T
(, describe the extended API in some) 304.89 293.67 T
(detail, and render preliminary conclusions.) 108 277.67 T
108 217.98 540 221 C
90 219.49 558 219.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(2. Software Information) 108 226.33 T
0 14 Q
(Softwar) 108 181.64 T
(e Category) 155.15 181.64 T
2 F
(Oracle is the well known Relational Database Management System \050) 108 152.64 T
2 11 Q
(RDBMS) 493.11 152.64 T
2 14 Q
(\051) 531.57 152.64 T
(product.) 108 136.64 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Curr) 108 736.84 T
(ent Status of the Oracle Porting Investigation) 125.18 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(3 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
0 14 Q
0 X
(Oracle V) 108 701.67 T
(ersion and Release Level) 160.72 701.67 T
2 F
(Oracle version 6.0.36 source code was used.) 108 672.67 T
0 F
(Authors and sour) 108 631.67 T
(ce) 212.7 631.67 T
2 F
(The authors of the Oracle) 108 596.67 T
2 11 Q
(RDBMS) 254.49 596.67 T
2 14 Q
( product are the Oracle Corporation.) 292.95 596.67 T
(Oracle) 108 568.67 T
2 11 Q
(RDBMS) 148.79 568.67 T
2 14 Q
( represents just under 1.9 million lines of C source code, of) 187.25 568.67 T
(which the components mentioned herein represent approximately 500,000) 108 552.67 T
(lines of code.) 108 536.67 T
0 11 Q
(ANDF) 108 495.67 T
0 14 Q
( T) 138.51 495.67 T
(echnology V) 150.05 495.67 T
(ersion Release) 222.23 495.67 T
2 F
(Release TDF-930127 of the) 108 460.67 T
2 11 Q
(ANDF) 267.33 460.67 T
2 14 Q
( T) 297.23 460.67 T
(echnology was used; it is based on the) 308.3 460.67 T
(TDF Speci\336cation Issue 2.0 Revision 1 dated December 1992.) 108 444.67 T
0 F
(OS Platform Envir) 108 403.67 T
(onments) 221.24 403.67 T
2 F
(Ultrix 4.2 DECstation 3100 \050) 108 368.67 T
2 11 Q
(MIPS) 270.86 368.67 T
2 14 Q
(\051 and SCO System V 3.2.1 \050i486\051 with) 296.5 368.67 T
(ODT) 108 352.67 T
(1.0.) 140.25 352.67 T
108 292.98 540 296 C
90 294.49 558 294.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(3. Current Status of the Oracle Porting Investigation) 108 301.33 T
2 14 Q
(The two major functional parts of Oracle which have been ported with the) 108 273.64 T
2 11 Q
(ANDF) 108 257.64 T
2 14 Q
( compiler technology in a native mode are the) 137.9 257.64 T
0 F
(Rdbms) 397.88 257.64 T
2 F
( and) 440.64 257.64 T
0 F
(Forms30) 467.84 257.64 T
2 F
(.) 520.69 257.64 T
(The three minor functional parts of Oracle were) 108 229.64 T
0 F
(Sqlcalc) 379.21 229.64 T
2 F
(,) 421.97 229.64 T
0 F
(Sqlplus) 428.97 229.64 T
2 F
(, and) 473.31 229.64 T
0 F
(Report) 108 213.64 T
2 F
(.) 149.96 213.64 T
(Initially) 108 185.64 T
(, we attempted to compile using the native compilers on both) 151.4 185.64 T
-0.17 (platforms and were not always successful. On the Ultrix platform we assume) 108 169.64 P
(this was because we were not attempting a full-blown build of Oracle from) 108 153.64 T
(scratch and not all parts of Oracle were being built in the usual order) 108 137.64 T
-0.27 (including some pieces which are dynamically generated on the \337y by various) 108 121.64 P
(Oracle preprocessors. On the SCO SYSV 3.2 platform, this was, however) 108 105.64 T
(,) 520.14 105.64 T
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Curr) 108 736.84 T
(ent Status of the Oracle Porting Investigation) 125.18 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(4 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
2 14 Q
0 X
(not the case. Oracle source code caused the native compiler \050) 108 701.67 T
3 13 Q
-0.65 (rcc) 449.54 701.67 S
2 14 Q
(\051 to exceed) 470.96 701.67 T
(\336xed table limits, and the bundled) 108 685.67 T
3 13 Q
-0.65 (cc) 301.95 685.67 S
2 14 Q
( compiler was not able to preprocess) 316.23 685.67 T
-0.09 (successfully) 108 669.67 P
-0.09 (. It seems that the versions we have, release level 3.2.1 and ODT) 175.49 669.67 P
(level 1.0, are not the latest releases of iX86 platforms in use by Oracle for) 108 653.67 T
(porting. Upgrades to release level 3.2.4 and ODT 2.0 were recommended by) 108 637.67 T
(Oracle and presumably cure the native compiler \050) 108 621.67 T
3 13 Q
-0.65 (rcc) 385.05 621.67 S
2 14 Q
(\051 problems.) 406.47 621.67 T
(Once the method for generating Make\336les was suitably modi\336ed to use the) 108 593.67 T
2 11 Q
(ANDF) 108 577.67 T
2 14 Q
( compiler) 137.9 577.67 T
(, and the de\336ne \337ags were consistent with navigating through) 190.59 577.67 T
(the native platform header \336les on the above platforms, the) 108 561.67 T
2 11 Q
(ANDF) 441.82 561.67 T
2 14 Q
( compiler) 471.72 561.67 T
-0.09 (sailed through builds of all of the above components \050in native mode\051. All of) 108 545.67 P
-0.53 (the minor components have been successfully tested in the same manner used) 108 529.67 P
(by Oracle Corporation for QA testing prior to shipment of product.) 108 513.67 T
(The) 108 485.67 T
2 11 Q
(ANDF) 133.26 485.67 T
2 14 Q
( Porting experiment for Oracle calls for using the) 163.16 485.67 T
2 11 Q
(ANDF) 441.79 485.67 T
2 14 Q
( compiler) 471.7 485.67 T
(technology in a strict) 108 469.67 T
2 11 Q
(ANDF) 229.26 469.67 T
2 14 Q
( header \336le mode,) 259.16 469.67 T
4 F
(i.e.) 362.92 469.67 T
2 F
( no native header \336les are) 380.01 469.67 T
(used. Native headers which contain tar) 108 453.67 T
(get dependent de\336nitions of C) 324.57 453.67 T
(constructs used in compiling Oracle are disallowed.) 108 437.67 T
2 11 Q
(2) 397.52 443.27 T
2 14 Q
(As stated above, all but one of the) 108 409.67 T
0 F
(Rdbms) 301.92 409.67 T
2 F
( component \336les have been) 344.68 409.67 T
(successfully ported to the) 108 393.67 T
2 11 Q
(ANDF) 254.12 393.67 T
2 14 Q
( intermediate \336le format which is both) 284.03 393.67 T
(machine and platform independent. For the) 108 377.67 T
0 F
(Rdbms) 353.21 377.67 T
2 F
( component alone, this) 395.98 377.67 T
(consists of a total of 596) 108 361.67 T
2 11 Q
(ANDF) 248.69 361.67 T
2 14 Q
( intermediate \336les \050) 278.6 361.67 T
3 13 Q
-0.65 (.j) 387.02 361.67 S
2 14 Q
(\051.) 401.31 361.67 T
(W) 108 333.67 T
(e have analyzed the Oracle header \336les and prototyped an extended) 120.09 333.67 T
(common API which is both machine- and platform- independent. For each) 108 317.67 T
(install site, it is then necessary to build an extended API token de\336nition) 108 301.67 T
(library which maps into the native platform. At present, Install scripts with) 108 285.67 T
(the) 108 269.67 T
3 13 Q
-0.65 ( .j) 125.1 269.67 S
2 14 Q
( \336les for each Oracle component comprise the) 146.52 269.67 T
2 11 Q
(ANDF) 407.65 269.67 T
2 14 Q
( distribution. The) 437.55 269.67 T
(work which remains for the) 108 253.67 T
0 F
(Rdbms) 266.15 253.67 T
2 F
( component requires only that some) 308.92 253.67 T
(unresolved symbol linking problems be resolved on either platform. This) 108 237.67 T
(appears to be a straightforward porting task which may involve rebuilding) 108 221.67 T
(some of the libraries which participate in the linking.) 108 205.67 T
108 117 540 137.09 C
108 124.99 239.98 124.99 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
2 11 Q
0 X
0 K
-0.15 (2.  See \322Porting to) 108 109.67 P
2 10 Q
-0.14 (ANDF) 190.85 109.67 P
2 11 Q
-0.15 (\323 by S. Macrakis, in) 218.06 109.67 P
4 10 Q
-0.14 (ANDF) 307.92 109.67 P
4 11 Q
-0.15 ( T) 334.02 109.67 P
-0.15 (echnology: Collected Papers) 341.71 109.67 P
2 F
-0.15 (, V) 468.95 109.67 P
-0.15 (olume 1, Jan-) 480.8 109.67 P
(uary 1993) 118.8 97.67 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(The Extended Common API Appr) 108 736.84 T
(oach) 225.13 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(5 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
108 691.98 540 695 C
90 693.49 558 693.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(4. The Extended Common API Approach) 108 700.33 T
2 14 Q
(The notion of an extended common API approach to porting application) 108 672.64 T
(software with the) 108 656.64 T
2 11 Q
(ANDF) 208.65 656.64 T
2 14 Q
( compiler technology is nothing more than building) 238.55 656.64 T
2 11 Q
(ANDF) 108 640.64 T
2 14 Q
( tokens which abstract source code fragments that may vary from) 137.9 640.64 T
(platform to platform. The extension occurs due to the fact that new header) 108 624.64 T
(\336les are scanned prior to the common API on top of which the extension is) 108 608.64 T
(built,) 108 592.64 T
4 F
( i.e.) 137.16 592.64 T
2 F
( in this case the XPG/3 header \336le set. The token declarations are) 157.76 592.64 T
(usually introduced in header) 108 576.64 T
3 13 Q
-0.65 ( .h) 266.94 576.64 S
2 14 Q
( \336les as opposed to executable source) 288.36 576.64 T
3 13 Q
-0.65 (.c) 501.7 576.64 S
2 14 Q
(\336les. These new header \336les reside under a directory named) 108 560.64 T
3 13 Q
-0.65 (oracle) 446.45 560.64 S
2 14 Q
( which) 489.29 560.64 T
(is sibling to the other) 108 544.64 T
2 11 Q
(ANDF) 229.66 544.64 T
2 14 Q
( common API header \336le directories. It is not) 259.57 544.64 T
(strictly required to introduce new token header \336les. For instance, the token) 108 528.64 T
3 13 Q
-0.65 (BITVEC) 108 512.64 S
2 14 Q
( is introduced in) 150.85 512.64 T
3 13 Q
-0.65 (defs/orastd.h) 244.9 512.64 S
2 14 Q
(. An) 337.74 512.64 T
3 13 Q
-0.65 (oracle.tl) 365.33 512.64 S
2 14 Q
( \336le contains the) 429.61 512.64 T
(token de\336nitions and is placed in the API token de\336nition libraries which) 108 496.64 T
(are distributed with the) 108 480.64 T
2 11 Q
(ANDF) 240.91 480.64 T
2 14 Q
( technology) 270.82 480.64 T
(. The environment \336le mentioned) 335.59 480.64 T
(below contains a pointer to the) 108 464.64 T
3 13 Q
-0.65 (oracle.tl) 283.66 464.64 S
2 14 Q
( library \336le.) 347.93 464.64 T
(Upon initial inspection, it was necessary to determine how best to utilize the) 108 442.64 T
(existing infrastructure of the Oracle Porting Kit in order to expedite our) 108 426.64 T
(investigation. W) 108 410.64 T
(e determined that it was straight-forward to modify the top-) 199.38 410.64 T
(level) 108 394.64 T
3 13 Q
-0.65 (prefix.mk) 138.7 394.64 S
2 14 Q
( and) 202.97 394.64 T
3 13 Q
-0.65 (librules.mk) 230.17 394.64 S
2 14 Q
( \336les such that when a) 308.73 394.64 T
3 13 Q
-0.65 (Make.file >) 436.2 394.64 S
-0.65 (Makefile) 108 378.64 S
2 14 Q
( command was given within any component subtree directory) 165.13 378.64 T
(, the) 509.31 378.64 T
(appropriate) 108 362.64 T
2 11 Q
(ANDF) 175.22 362.64 T
2 14 Q
( actions would get built into the local source code) 205.12 362.64 T
(Make\336les.) 108 346.64 T
(The next step was to create a vanilla version of the machine and platform) 108 318.64 T
(independent environment for) 108 302.64 T
2 11 Q
(ANDF) 273.93 302.64 T
2 14 Q
(. This consisted of constructing an) 302.72 302.64 T
2 11 Q
(ANDF) 498.21 302.64 T
2 14 Q
(environment \336le, named) 108 286.64 T
3 13 Q
-0.65 (oracle) 247.91 286.64 S
2 14 Q
(, which resided with the other) 290.76 286.64 T
2 11 Q
(ANDF) 460.58 286.64 T
2 14 Q
(technology environment \336les for the code drop. The trigger to instantiate its) 108 270.64 T
(use was edited into the) 108 254.64 T
3 13 Q
-0.65 (prefix.mk) 238.97 254.64 S
2 14 Q
( modi\336cations above such that the) 303.24 254.64 T
(compiler) 108 238.64 T
3 13 Q
-0.65 (cc) 161.24 238.64 S
2 14 Q
( was invoked as) 175.52 238.64 T
3 13 Q
-0.65 (tcc -Yoracle) 268.01 238.64 S
2 14 Q
(\311. The) 360.85 238.64 T
3 13 Q
-0.65 (oracle) 407.09 238.64 S
2 14 Q
( environment) 449.94 238.64 T
-0.22 (\336le contains a directory pointer to scan for the extended common API header) 108 222.64 P
(\336les that needed to be created, and also turned on the) 108 206.64 T
3 13 Q
-0.65 (not_ansi) 407.99 206.64 S
2 14 Q
( and) 465.12 206.64 T
3 13 Q
-0.65 (nepc) 492.33 206.64 S
2 14 Q
(\337ags for the) 108 190.64 T
2 11 Q
(ANDF) 178.34 190.64 T
2 14 Q
( compilation.) 208.24 190.64 T
-0.14 (What we saw at the beginning of the port were application-dependent header) 108 162.64 P
(\336les which hard-coded absolute path names of platform) 108 146.64 T
3 13 Q
-0.65 (/usr/include) 422.77 146.64 S
2 14 Q
(header \336les. There are also application dependent versions of these header) 108 130.64 T
(\336les in the directories which are searched prior to the) 108 114.64 T
2 11 Q
(ANDF) 408.77 114.64 T
2 14 Q
( header \336le set.) 438.67 114.64 T
-0.04 (Since this was a violation of the) 108 98.64 P
2 11 Q
-0.03 (ANDF) 290.03 98.64 P
2 14 Q
-0.04 ( rule to avoid using native header \336les,) 319.93 98.64 P
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(The Envir) 108 736.84 T
(onment Files) 142.73 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(6 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
2 14 Q
0 X
(the obvious \336x was to again modify the) 108 701.67 T
3 13 Q
-0.65 (prefix.mk) 332.65 701.67 S
2 14 Q
( \336le in the Oracle root) 396.92 701.67 T
(directory to avoid scanning the include directory) 108 685.67 T
3 13 Q
-0.65 (standard_def) 383.52 685.67 S
2 14 Q
(. In other) 469.22 685.67 T
(words, the ANSI standard header \336les then were picked up via the) 108 669.67 T
2 11 Q
(ANDF) 482.21 669.67 T
2 14 Q
(header \336le set in accordance with our) 108 653.67 T
2 11 Q
(ANDF) 320.54 653.67 T
2 14 Q
( porting guidelines.) 350.45 653.67 T
(It was necessary to provide some) 108 625.67 T
3 13 Q
-0.65 (#define) 296.85 625.67 S
2 14 Q
( de\336nitions in the required oracle) 346.84 625.67 T
(header \336les, and some in the) 108 609.67 T
2 11 Q
(ANDF) 270.83 609.67 T
2 14 Q
( environment \336le.) 300.73 609.67 T
-0.31 (For the most part, minor source code changes were required to the extent that) 108 581.67 P
(casts were required for prototyped call interfaces, such as the) 108 565.67 T
3 13 Q
-0.65 (strlen) 453.43 565.67 S
2 14 Q
(interface.) 108 549.67 T
(It should also be noted that several bug reports with regard to limitations of) 108 521.67 T
(the) 108 505.67 T
2 11 Q
(ANDF) 128.6 505.67 T
2 14 Q
( compiler technology were submitted due to the Oracle porting) 158.5 505.67 T
(investigation.) 108 489.67 T
108 429.98 540 433 C
90 431.49 558 431.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(5. The Environment Files) 108 438.33 T
2 14 Q
(The environment \336les created for the) 108 410.64 T
2 11 Q
(ANDF) 318.61 410.64 T
2 14 Q
( porting investigation were either) 348.52 410.64 T
(native or) 108 394.64 T
2 11 Q
(ANDF) 160.85 394.64 T
2 14 Q
(, each of which were unique for the particular platform due to) 189.63 394.64 T
(dif) 108 378.64 T
(ferences in directory paths on each platform or native \337ags required.) 123.29 378.64 T
(For example, the contents of the mips native environment \336le was:) 108 350.64 T
3 12 Q
(+INCL \322-I/usr/include\323) 122.4 329.98 T
(+FLAG \322-not_ansi\323) 122.4 315.98 T
(+FLAG \322-nepc\323) 122.4 301.98 T
(+FLAG \322-D__mips\323) 122.4 287.98 T
(+FLAG \322-Dmips\323) 122.4 273.98 T
(+FLAG \322-DLANGUAGE_C\323) 122.4 259.98 T
(+FLAG \322-D__LANGUAGE_C\323) 122.4 245.98 T
(+FLAG \322-DMIPSEL\323) 122.4 231.98 T
(+FLAG \322-D__MIPSEL\323) 122.4 217.98 T
(+FLAG \322-Dunix\323) 122.4 203.98 T
(+FLAG \322-D__unix\323) 122.4 189.98 T
(+FLAG \322-Dultrix\323) 122.4 175.98 T
(+FLAG \322-D__ultrix\323) 122.4 161.98 T
(+FLAG \322-Y32bit\323) 122.4 147.98 T
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(The Envir) 108 736.84 T
(onment Files) 142.73 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(7 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
2 14 Q
0 X
(In contrast, the contents of the i486 native environment \336le was:) 108 701.67 T
3 12 Q
(+INCL           \322-I/usr/include\323) 122.4 681 T
(+FLAG           \322-not_ansi\323) 122.4 667 T
(+FLAG           \322-nepc\323) 122.4 653 T
(+FLAG           \322-DM_I86\323) 122.4 639 T
(+FLAG           \322-DM_I86SM\323) 122.4 625 T
(+FLAG           \322-DM_SDATA\323) 122.4 611 T
(+FLAG           \322-DM_STEXT\323) 122.4 597 T
(+FLAG           \322-DM_I386\323) 122.4 583 T
(+FLAG           \322-DM_XENIX\323) 122.4 569 T
(+FLAG           \322-DM_BITFIELDS\323) 122.4 555 T
(+FLAG           \322-Di386\323) 122.4 541 T
(+FLAG           \322-DM_INTERNAT\323) 122.4 527 T
(+FLAG           \322-Dunix\323) 122.4 513 T
(+FLAG           \322-DM_UNIX\323) 122.4 499 T
(+FLAG           \322-DM_COFF\323) 122.4 485 T
(+FLAG           \322-DM_SYS5\323) 122.4 471 T
(+FLAG           \322-DM_SYSV\323) 122.4 457 T
(+FLAG           \322-DM_SYS3\323) 122.4 443 T
(+FLAG           \322-DM_SYSIII\323) 122.4 429 T
(+FLAG           \322-DM_WORDSWAP\323) 122.4 415 T
(+FLAG           \322-Y32bit\323) 122.4 401 T
2 14 Q
(The) 108 374.67 T
2 11 Q
(ANDF) 133.26 374.67 T
2 14 Q
( environment \336le for the mips platform was:) 163.16 374.67 T
3 12 Q
(+INCL \322-I/u2/rsandf/feb-93/tdf/include/include/oracle) 122.4 354 T
(\134) 532.8 354 T
(-I/u2/rsandf/feb-93/tdf/include/include/xpg3\323) 136.8 341 T
(+LIB  \322-loracle -lxpg3\323) 122.4 327 T
(+FLAG \322-DUNIX\323) 122.4 313 T
(+FLAG \322-DANDF\323) 122.4 299 T
(+FLAG \322-DANSI_HEADERS\323) 122.4 285 T
2 14 Q
(In contrast, the contents of the i486) 108 258.67 T
2 11 Q
(ANDF) 309.31 258.67 T
2 14 Q
( environment \336le were:) 339.21 258.67 T
3 12 Q
(+INCL \322-I/usr/rsandf/feb-93/tdf/include/include/oracle) 122.4 238 T
(\134) 532.8 238 T
(-I/usr/rsandf/feb-93/tdf/include/include/xpg3\323) 136.8 225 T
(+LIB  \322-loracle -lxpg3\323) 122.4 211 T
(+FLAG \322-DUNIX\323) 122.4 197 T
(+FLAG \322-DANDF\323) 122.4 183 T
(+FLAG \322-DANSI_HEADERS\323) 122.4 169 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(T) 108 736.84 T
(oken Declarations) 112.6 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(8 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
108 691.98 540 695 C
90 693.49 558 693.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(6. T) 108 700.33 T
(oken Declarations) 132.29 700.33 T
2 14 Q
(The tokens required for the Oracle) 108 672.64 T
2 11 Q
(ANDF) 304.61 672.64 T
2 14 Q
( port, as explained above, were) 334.51 672.64 T
(distributed between either the extended API header \336les or integrated into) 108 656.64 T
(the Oracle application header \336les.) 108 640.64 T
(The token declared in each header \336le were as follows:) 108 612.64 T
-0.28 (Oracle Extended API hea) 108 584.64 S
(der \336les \050) 244.16 584.64 T
3 13 Q
(\311) 297.01 584.64 T
-1.95 (/) 304.8 584.64 S
-0.91 (feb93/tdf/include/include/oracle) 310.64 584.64 S
2 14 Q
(\051:) 530.84 584.64 T
154.78 562.99 111.6 562.99 2 L
V
0.48 H
0 Z
N
3 12 Q
(math.h) 111.6 563.98 T
(#pragma token STRUCT TAG exception #) 122.4 547.98 T
(#pragma token MEMBER int : struct exception : type #) 122.4 533.98 T
(\134) 532.8 533.98 T
(_exception_type_) 136.8 520.98 T
(#pragma token MEMBER char * : struct exception : name #) 122.4 506.98 T
(\134) 532.8 506.98 T
(_exception_name_) 136.8 493.98 T
(#pragma token MEMBER double : struct exception : arg1 #) 122.4 479.98 T
(\134) 532.8 479.98 T
(_exception_arg1_) 136.8 466.98 T
(#pragma token MEMBER double : struct exception : arg2 #) 122.4 452.98 T
(\134) 532.8 452.98 T
(_exception_arg2_) 136.8 439.98 T
(#pragma token MEMBER double : struct exception : retval #) 122.4 425.98 T
(\134) 532.8 425.98 T
(_exception_retval_) 136.8 412.98 T
176.36 394.99 111.6 394.99 2 L
V
N
(sparams.h) 111.6 395.98 T
(#pragma token EXP rvalue : int : SSTPBLCK #) 122.4 379.98 T
(#pragma token EXP rvalue : int : SSTKBLCK #) 122.4 365.98 T
169.17 347.99 111.6 347.99 2 L
V
N
(unistd.h) 111.6 348.98 T
(#pragma token FUNC char * \050 int \051 : sbrk #) 122.4 332.98 T
2 14 Q
(Oracle header \336les [Extended API] \050) 108 306.64 T
3 13 Q
-0.65 ($SRCHOME/include) 312.76 306.64 S
2 14 Q
(\051:) 427.02 306.64 T
147.58 284.99 111.6 284.99 2 L
V
N
3 12 Q
(kdi.h) 111.6 285.98 T
(#pragma token FUNC int \050ktbbh *\051 : kdidxl #) 122.4 269.98 T
(#pragma token FUNC int \050int\051 : kdidvl #) 122.4 255.98 T
147.58 237.99 111.6 237.99 2 L
V
N
(kdo.h) 111.6 238.98 T
(#pragma token FUNC int \050 int, int\051 : kdousz #) 122.4 222.98 T
147.58 204.99 111.6 204.99 2 L
V
N
(kdr.h) 111.6 205.98 T
(#pragma token FUNC int \050int\051 : KDRHSZ #) 122.4 189.98 T
2 14 Q
(Oracle header \336les [Extended API] \050) 108 163.64 T
3 13 Q
-0.65 ($SRCHOME/defs) 312.76 163.64 S
2 14 Q
(\051:) 405.6 163.64 T
169.17 141.99 111.6 141.99 2 L
V
N
3 12 Q
(orastd.h) 111.6 142.98 T
(#pragma token FUNC int \050 int \051 : BITVEC #) 122.4 126.98 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(T) 108 736.84 T
(oken De\336nitions) 112.6 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(9 of 15) 511.69 54.45 T
108 90 540 711 R
7 X
V
3 12 Q
0 X
(#pragma token) 122.4 703 T
(\134) 532.8 703 T
(PROC \050 EXP lvalue : bitvec[] :, EXP rvalue : uword : \051) 136.8 690 T
(\134) 532.8 690 T
(EXP rvalue : void :) 136.8 677 T
(\134) 532.8 677 T
(vecclr #) 136.8 664 T
(#pragma token) 122.4 650 T
(\134) 532.8 650 T
(PROC \050 EXP lvalue : bitvec[] :, EXP rvalue : uword : \051) 136.8 637 T
(\134) 532.8 637 T
(EXP rvalue : void :) 136.8 624 T
(\134) 532.8 624 T
(vecset #) 136.8 611 T
(#pragma token) 122.4 597 T
(\134) 532.8 597 T
(PROC \050 EXP lvalue : bitvec[] :,) 136.8 584 T
(\134) 532.8 584 T
(       EXP lvalue : bitvec[] :,) 136.8 571 T
(\134) 532.8 571 T
(       EXP rvalue : uword : \051) 136.8 558 T
(\134) 532.8 558 T
(EXP rvalue : void :) 136.8 545 T
(\134) 532.8 545 T
(veccpy #) 136.8 532 T
-1.78 (#pragma token FUNC bool \050 bitvec vtr[], uword bt \051 : vecbit #) 122.4 518 P
-1.78 (#pragma token FUNC bool \050 bitvec vtr[], uword bt \051 : vecbis #) 122.4 504 P
-1.78 (#pragma token FUNC bool \050 bitvec vtr[], uword bt \051 : vecbic #) 122.4 490 P
2 14 Q
(Oracle header \336les [Extended API] \050) 108 463.67 T
3 13 Q
-0.65 ($SRCHOME/sqlcalc/include) 312.76 463.67 S
2 14 Q
(\051:) 484.15 463.67 T
169.17 442.02 111.6 442.02 2 L
V
0.48 H
N
3 12 Q
(usdunx.h) 111.6 443 T
(#pragma token EXP rvalue: unsigned char : HLPFILE #) 122.4 427 T
(#pragma token EXP rvalue: unsigned char : OVLFILE #) 122.4 413 T
(#pragma token EXP rvalue: unsigned char : MSGFILE #) 122.4 399 T
108 340.98 540 344 C
90 342.49 558 342.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(7. T) 108 349.33 T
(oken De\336nitions) 132.29 349.33 T
2 14 Q
(The method used to de\336ne the above tokens required the use of the) 108 317.64 T
3 13 Q
-0.65 (tld) 486.11 317.64 S
2 14 Q
(command which can be invoked with parameters,) 108 301.64 T
4 F
(e.g.) 389.34 301.64 T
3 13 Q
-0.65 (-mc -o oracle.tl) 413.05 301.64 S
-0.65 (*.j) 108 285.64 S
2 14 Q
(, in order to create the) 129.42 285.64 T
3 13 Q
-0.65 (oracle.tl) 255.7 285.64 S
2 14 Q
( token de\336nition library) 319.98 285.64 T
(.) 451.6 285.64 T
(The) 108 257.64 T
2 11 Q
(ANDF) 133.26 257.64 T
2 14 Q
( driver) 163.16 257.64 T
(,) 199.51 257.64 T
3 13 Q
-0.65 (tcc) 206.51 257.64 S
2 14 Q
(, is used with the) 227.93 257.64 T
3 13 Q
-0.65 (-) 325.88 257.64 S
5 F
-0.65 (F) 333.02 257.64 S
3 F
-0.65 (j) 340.16 257.64 S
2 14 Q
( \337ag and perhaps some) 347.3 257.64 T
3 13 Q
-0.65 (-) 479.04 257.64 S
5 F
-0.65 (I) 486.18 257.64 S
6 F
-0.65 (dir) 493.32 257.64 S
2 14 Q
(paths in order to create the) 108 241.64 T
3 13 Q
-0.65 (.j) 260.32 241.64 S
2 14 Q
( \336les containing the platform dependent token) 274.6 241.64 T
(de\336nitions on each platform. Path names were modi\336ed as required for the) 108 225.64 T
(i486 platform dependent pathname.) 108 209.64 T
(The source \336les used for this purpose were as follows:) 108 181.64 T
147.58 159.99 111.6 159.99 2 L
V
0.48 H
0 Z
N
3 12 Q
(kdi.c) 111.6 160.98 T
(#define __BUILDING_TDF_ORACLE_KDI_H) 122.4 144.98 T
(#ifndef __WRONG_ORACLE_KDI_H) 122.4 130.98 T
(#pragma implement interface) 122.4 116.98 T
-7.2 (\134) 532.8 116.98 P
(\322/u2/oracle/pmax_ul4/include/kdi.h\323) 136.8 103.98 T
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(T) 108 736.84 T
(oken De\336nitions) 112.6 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(10 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
3 12 Q
0 X
(#undef kdidxl) 122.4 703 T
(#define kdidxl\050tbhdr\051 ktbdxl\050tbhdr, 1, sizeof\050kdige\051\051) 122.4 689 T
(#undef kdidvl) 122.4 675 T
(#define kdidvl\050nitl\051 ktbdvl\050nitl, 1, sizeof\050kdige\051\051) 122.4 661 T
(#endif) 122.4 633 T
147.58 615.02 111.6 615.02 2 L
V
0.48 H
N
(kdo.c) 111.6 616 T
(#define __BUILDING_TDF_ORACLE_KDO_H) 122.4 600 T
(#ifndef __WRONG_ORACLE_KDO_H) 122.4 586 T
(#pragma implement interface) 122.4 572 T
(\322/u2/oracle/pmax_ul4/include/kdo.h\323) 136.8 559 T
(#undef kdousz) 122.4 545 T
(#define kdousz\050n, siz\051) 122.4 531 T
(\134) 532.8 531 T
(\050\050sword\051 \050 -\050\050sword\051kcbdtl\051 + \050\050sword\051ktumxr\050\050n\051+3\051\051 +) 136.8 518 T
-7.2 (\134) 532.8 518 P
(\050\050sword\051sizeof\050ktbru\051\051 +) 136.8 505 T
(\134) 532.8 505 T
(\050\050sword\051) 136.8 492 T
(\134) 532.8 492 T
(  max\050sizeof\050kdoi\051, sizeof\050kdom\051+\050n\051*sizeof\050kcol\051\051\051 +) 136.8 479 T
(\134) 532.8 479 T
(\050\050sword\051 \050\050\050KDRMAXCO\051+\050UB1BITS-1\051\051>>3\051\051 +) 136.8 466 T
-7.2 (\134) 532.8 466 P
(\050\050sword\051\050\050\050n\051+\050UB1BITS-1\051\051>>3\051\051 +) 136.8 453 T
(\134) 532.8 453 T
(\050\050sword\051\050siz\051\051 \051\051) 136.8 440 T
(#endif) 122.4 426 T
147.58 408.02 111.6 408.02 2 L
V
N
(kdr.c) 111.6 409 T
(#define __BUILDING_TDF_ORACLE_KDR_H) 122.4 393 T
(#ifndef __WRONG_ORACLE_KDR_H) 122.4 379 T
(#pragma implement interface) 122.4 365 T
(\322/u2/oracle/pmax_ul4/include/kdr.h\323) 136.8 352 T
(#undef KDRHSZ) 122.4 324 T
(#define KDRHSZ\050flags\051 \050) 122.4 310 T
(\134) 532.8 310 T
(3*sizeof\050ub1\051 +) 136.8 297 T
(\134) 532.8 297 T
(\050bit\050flags,KDRHFC\051 ? sizeof\050ub1\051 : 0\051 +) 136.8 284 T
(\134) 532.8 284 T
(  \050bit\050flags,KDRHFK\051) 122.4 270 T
(\134) 532.8 270 T
(    ? \050sizeof\050b2\051+sizeof\050kd_brid\051\051<<1) 136.8 257 T
(\134) 532.8 257 T
(    :0\051      +) 136.8 244 T
(\134) 532.8 244 T
(\050\050bit\050flags,KDRHFF\051 ? 1:0\051 & \050!bit\050flags,KDRHFH\051 ? 1:0\051) 136.8 231 T
(\134) 532.8 231 T
(? sizeof\050kd_brid\051) 136.8 218 T
(\134) 532.8 218 T
( : 0 \051  +) 136.8 205 T
(\134) 532.8 205 T
(\050bit\050flags,KDRHFL\051 ? 0 : sizeof\050kd_brid\051\051 \051) 136.8 192 T
(#endif) 122.4 178 T
154.78 160.02 111.6 160.02 2 L
V
N
(math.c) 111.6 161 T
(#define __BUILDING_TDF_ORACLE_MATH_H) 122.4 145 T
(#ifndef __WRONG_ORACLE_MATH_H) 122.4 131 T
(#pragma implement interface) 122.4 117 T
(\134) 532.8 117 T
(\322/u2/rsandf/feb93/tdf/include/include/oracle/math.h\322) 136.8 104 T
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(T) 108 736.84 T
(oken De\336nitions) 112.6 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(11 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
3 12 Q
0 X
(#include \322/usr/include/math.h\323) 122.4 703 T
(#endif) 122.4 689 T
169.17 671.02 111.6 671.02 2 L
V
0.48 H
N
(orastd.c) 111.6 672 T
(#define __BUILDING_TDF_ORACLE_ORASTD_H) 122.4 656 T
(#ifndef __WRONG_ORACLE_ORASTD_H) 122.4 642 T
(#pragma implement interface  \134) 122.4 628 T
(\322/u2/oracle/pmax_ul4/defs/orastd.h\323) 136.8 615 T
(#define BITVEC\050n\051 \050\050\050n\051+\050UB1BITS-1\051\051>>3\051) 122.4 587 T
(void vecclr\050bitvec vtr[],uword size\051;) 122.4 573 T
(#define vecclr\050vtr, size\051) 122.4 559 T
(\134) 532.8 559 T
(\050genclr\050\050ptr_t\051\050vtr\051, \050size_t\051BITVEC\050size\051\051\051) 136.8 546 T
(void vecset\050bitvec vtr[],uword size\051;) 122.4 532 T
(#define vecset\050vtr, size\051) 122.4 518 T
(\134) 532.8 518 T
(\050DISCARD memset\050\050ptr_t\051\050vtr\051, ~\050\050ub1\0510\051,) 136.8 505 T
(\134) 532.8 505 T
(                \050size_t\051BITVEC\050size\051 \051 \051) 136.8 492 T
(void veccpy\050bitvec dest[], bitvec src[], uword size\051;) 122.4 478 T
(#define veccpy\050dest, src, size\051) 122.4 464 T
(\134) 532.8 464 T
(\050DISCARD memcpy\050\050ptr_t\051\050dest\051, \050ptr_t\051\050src\051,) 136.8 451 T
(\134) 532.8 451 T
(                \050size_t\051BITVEC\050size\051 \051 \051) 136.8 438 T
(bool vecbit\050bitvec vtr[], uword bt\051;) 122.4 424 T
(#define vecbit\050vtr, bt\051) 122.4 410 T
(\134) 532.8 410 T
-0.7 (\050 \050vtr\051[\050bt\051 >> 3] & \050\050ub1\051 \0501 << \050\050bt\051 & \050UB1BITS-1\051\051\051\051\051) 136.8 397 P
(bool vecbis\050bitvec vtr[], uword bt\051;) 122.4 383 T
(#define vecbis\050vtr, bt\051) 122.4 369 T
(\134) 532.8 369 T
-1.42 (\050 \050vtr\051[\050bt\051 >> 3] |= \050\050ub1\051 \0501 << \050\050bt\051 & \050UB1BITS-1\051\051\051\051\051) 136.8 356 P
(bool vecbic\050bitvec vtr[], uword bt\051;) 122.4 342 T
(#define vecbic\050vtr, bt\051) 122.4 328 T
(\134) 532.8 328 T
-1.58 (\050 \050vtr\051[\050bt\051 >> 3] &= \050\050ub1\051~\0501 << \050\050bt\051 & \050UB1BITS-1\051\051\051\051\051) 136.8 315 P
(#endif) 122.4 301 T
176.36 283.02 111.6 283.02 2 L
V
N
(sparams.c) 111.6 284 T
(#define __BUILDING_TDF_ORACLE_SPARAMS_H) 122.4 268 T
(#ifndef __WRONG_ORACLE_SPARAMS_H) 122.4 254 T
(#pragma implement interface) 122.4 240 T
-7.2 (\134) 532.8 240 P
(\322/u2/rsandf/feb93/tdf/include/include/oracle/sparams.h\323) 136.8 227 T
(#define ULTRIX) 122.4 213 T
-1 (/*use SYSV_386 for SCO_UNIX, ULTRIX for PMAX DECstation*/) 136.8 200 P
(#include \322/u2/oracle/pmax_ul4/libs/sosd/sparams.h\323) 122.4 186 T
(#endif) 122.4 172 T
169.17 154.02 111.6 154.02 2 L
V
N
(unistd.c) 111.6 155 T
(#define __BUILDING_TDF_ORACLE_UNISTD_H) 122.4 139 T
(#ifndef __WRONG_ORACLE_UNISTD_H) 122.4 125 T
(#pragma implement interface) 122.4 111 T
(\134) 532.8 111 T
(\322/u2/rsandf/feb93/tdf/include/include/oracle/unistd.h\323) 136.8 98 T
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(The Pr) 108 736.84 T
(e\336x.mk Modi\336cations) 131.62 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(12 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
3 12 Q
0 X
(extern char *sbrk\050\051;) 122.4 703 T
(#endif) 122.4 689 T
169.17 671.02 111.6 671.02 2 L
V
0.48 H
N
(usdunx.c) 111.6 672 T
(#define __BUILDING_TDF_ORACLE_USDUNX_H) 122.4 656 T
(#ifndef __WRONG_ORACLE_USDUNX_H) 122.4 642 T
(#pragma implement interface) 122.4 628 T
-7.2 (\134) 532.8 628 P
(\322/u2/oracle/pmax_ul4/sqlcalc/include/usdunx.h\323) 136.8 615 T
(#define HLPFILE \050unsigned char\051) 122.4 587 T
-7.2 (\134) 532.8 587 P
(\322/u2/oracle/pmax_ul4/sqlcalc/admin/sqlcalc.hlp\323) 136.8 574 T
(#define OVLFILE  \050unsigned char\051) 122.4 560 T
(\134) 532.8 560 T
(\322/u2/oracle/pmax_ul4/sqlcalc/admin/sqlcalc.ovl\323) 136.8 547 T
(#define MSGFILE  \050unsigned char\051) 122.4 533 T
(\134) 532.8 533 T
(\322/u2/oracle/pmax_ul4/sqlcalc/admin/sqlcalc.msg\323) 136.8 520 T
(#endif) 122.4 506 T
108 447.98 540 451 C
90 449.49 558 449.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(8.  The Pre\336x.mk Modi\336cations) 108 456.33 T
2 14 Q
(The following dif) 108 428.64 T
(ferences highlight the changes made to the pre\336x.mk \336le) 206.46 428.64 T
(in) 108 412.64 T
3 13 Q
-0.65 ($SRCHOME) 122.38 412.64 S
2 14 Q
(. Subsequent invocation of) 179.51 412.64 T
3 13 Q
-0.65 (Make.file > Makefile) 332.26 412.64 S
2 14 Q
( in any) 475.08 412.64 T
(one subdirectory with a local .mk \336le created the desired) 108 396.64 T
2 11 Q
(ANDF) 428.59 396.64 T
2 14 Q
( modi\336cation) 458.5 396.64 T
(to the local Make\336le.) 108 380.64 T
3 12 Q
(< MAKE= make $\050MKFLAGS\051) 122.4 359.98 T
(> MAKE= make -k $\050MKFLAGS\051) 122.4 345.98 T
(< SPFLAGS=-DSYSTEM_FIVE -Y) 122.4 317.98 T
(> SPFLAGS=-DSYSTEM_FIVE) 122.4 303.98 T
(< CC=cc) 122.4 275.98 T
(> CC=tcc -Yoracle -not_ansi -nepc) 122.4 261.98 T
(< CCFLAGS=-Wf,-XNd9000) 122.4 233.98 T
(> CCFLAGS=) 122.4 219.98 T
(< OTHERLIBS= -ldnet -lcV) 122.4 191.98 T
(> OTHERLIBS= -lcV) 122.4 177.98 T
(< LIBDNT= $\050NETHOME\051/dnt/libdnt.a) 122.4 149.98 T
(> LIBDNT=) 122.4 135.98 T
(< NETLIBS= $\050LIBUTT\051 $\050LIBDNT\051 $\050LIBASYNC\051 $\050LIBTLI\051) 122.4 107.98 T
(\134) 532.8 107.98 T
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Make\336le Changes for ANDF) 108 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(13 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
3 12 Q
0 X
(<   $\050LIBLU62\051 $\050LIBX25\051 $\050LIBOSI\051 $\050LIBSQLNET\051) 122.4 703 T
(> NETLIBS= $\050LIBUTT\051 $\050LIBASYNC\051 $\050LIBTLI\051 $\050LIBLU62\051) 122.4 689 T
(\134) 532.8 689 T
(>   $\050LIBX25\051 $\050LIBOSI\051 $\050LIBSQLNET\051) 122.4 675 T
(< NETLIBS= $\050LIBUTT\051 $\050LIBTCP\051 $\050LIBDNT\051 $\050LIBASYNC\051) 122.4 647 T
(\134) 532.8 647 T
(<   $\050LIBTLI\051 $\050LIBLU62\051) 122.4 633 T
(> NETLIBS= $\050LIBUTT\051 $\050LIBTCP\051 $\050LIBASYNC\051 $\050LIBTLI\051) 122.4 619 T
(\134) 532.8 619 T
(>   $\050LIBLU62\051) 122.4 605 T
(< SRCINCLUDE= $\050DEFSINCLUDE\051 $\050CCINCLUDE\051 $\050SOSDINCLUDE\051) 122.4 577 T
(\134) 532.8 577 T
(<   $\050STDINCLUDE\051) 122.4 563 T
(> SRCINCLUDE= $\050DEFSINCLUDE\051 $\050CCINCLUDE\051 $\050SOSDINCLUDE\051) 122.4 549 T
(\134) 532.8 549 T
(>   #$\050STDINCLUDE\051) 122.4 535 T
2 14 Q
(The) 108 508.67 T
3 13 Q
-0.65 (#$\050STDINCLUDE\051) 133.26 508.67 S
2 14 Q
( on the above line had the desired ef) 233.23 508.67 T
(fect of avoiding) 435.05 508.67 T
(the Oracle application\325) 108 492.67 T
(s own version of platform dependent standard) 235.46 492.67 T
(de\336nitions which were provided via the) 108 476.67 T
2 11 Q
(ANDF) 333.4 476.67 T
2 14 Q
( header \336les. Note that) 363.31 476.67 T
3 13 Q
-0.65 (libdnt.a) 108 460.67 S
2 14 Q
( \050) 165.13 460.67 T
3 13 Q
-0.65 (LIBDNT.a) 173.29 460.67 S
2 14 Q
(\051 was stubbed out for this investigation meaning that) 230.42 460.67 T
(this version of Oracle was intended not to run over DECnet.) 108 444.67 T
108 384.98 540 388 C
90 386.49 558 386.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(9. Make\336le Changes for) 108 393.33 T
1 13 Q
(ANDF) 271.03 393.33 T
2 14 Q
(The following example changes were made to each component source) 108 365.64 T
(subdirectory Make\336le. Either a shell script or a) 108 349.64 T
3 13 Q
-0.65 (make -k andf) 374.97 349.64 S
2 14 Q
( command) 460.67 349.64 T
(which descended each component source directory subtree generated the) 108 333.64 T
2 11 Q
(ANDF) 108 317.64 T
3 13 Q
-0.65 (.j) 141.4 317.64 S
2 14 Q
( intermediate \336les.) 155.68 317.64 T
3 12 Q
(< .SUFFIXES: .i .pc .ok .h .hok .d .scr .r .j .k) 122.4 296.98 T
(> .SUFFIXES: .o .j .c) 122.4 268.98 T
(> .c.j:) 122.4 254.98 T
(>       $\050CC\051 -Fj $\050CFLAGS\051 $<) 122.4 240.98 T
(> .j.o:) 122.4 226.98 T
(>       $\050CC\051 -c $\050CFLAGS\051 $<) 122.4 212.98 T
(> OBJSJ=${OBJS:.o=.j}) 122.4 198.98 T
(> andf: $\050OBJSJ\051) 122.4 184.98 T
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Sour) 108 736.84 T
(ce Code Modi\336cations) 124.29 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(14 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
108 691.98 540 695 C
90 693.49 558 693.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(10. Source Code Modi\336cations) 108 700.33 T
2 14 Q
(As mentioned above, the majority of source code modi\336cations comprised) 108 672.64 T
(the insertion of appropriate casts to mollify the) 108 656.64 T
2 11 Q
(ANDF) 373.83 656.64 T
2 14 Q
( compiler) 403.73 656.64 T
(\325) 457.49 656.64 T
(s) 461.38 656.64 T
(requirements.) 108 640.64 T
(The creation of the) 108 612.64 T
2 11 Q
(ANDF) 217.57 612.64 T
2 14 Q
( de\336ne \050see the) 247.48 612.64 T
2 11 Q
(ANDF) 335.29 612.64 T
2 14 Q
( environment \336le\051, was) 365.2 612.64 T
-0.51 (necessary in) 108 596.64 P
3 13 Q
-1.04 -0.65 (defs/orastd.h) 179.25 596.64 B
2 14 Q
-0.51 ( to separate the inserted token declarations from) 272.08 596.64 P
(the original source code. The original source code was then accessible only) 108 580.64 T
(via the native) 108 564.64 T
3 13 Q
-0.65 (cc) 186.89 564.64 S
2 14 Q
( compiler or native mode use of the) 201.17 564.64 T
2 11 Q
(ANDF) 403.25 564.64 T
2 14 Q
( compiler with an) 433.15 564.64 T
(appropriate) 108 548.64 T
3 13 Q
-0.65 (#ifndef) 175.22 548.64 S
2 11 Q
(ANDF) 228.71 548.64 T
2 14 Q
(. Some source \336les required that) 257.49 548.64 T
3 13 Q
-0.65 (defined\050ANDF\051) 441.31 548.64 S
2 14 Q
(be appended to the list of) 108 532.64 T
3 13 Q
-0.65 (#if defined\050\311\051 || \311) 252.57 532.64 S
2 14 Q
( items.) 388.25 532.64 T
(Whenever a declaration like) 108 504.64 T
3 13 Q
-0.65 (extern int errno;) 268.86 504.64 S
2 14 Q
( occurs in application) 390.26 504.64 T
(source code, it is necessary to stub it out or delete it when using the) 108 488.64 T
2 11 Q
(ANDF) 488.86 488.64 T
2 14 Q
(compiler) 108 472.64 T
(.) 156.97 472.64 T
(Occasionally) 108 444.64 T
(, it was necessary to modify a) 180.14 444.64 T
3 13 Q
-0.65 (#include) 349.58 444.64 S
2 14 Q
( for a header \336le, such) 406.71 444.64 T
(as) 108 428.64 T
3 13 Q
-0.65 (<fcntl.h>) 123.15 428.64 S
2 14 Q
( instead of) 187.43 428.64 T
3 13 Q
-0.65 (<sys/file.h>) 249.21 428.64 S
2 14 Q
(, or) 334.91 428.64 T
3 13 Q
-0.65 (<math.h>) 357.06 428.64 S
2 14 Q
( instead of) 414.19 428.64 T
3 13 Q
-0.65 (/usr/include/math.h) 108 412.64 S
2 14 Q
(.) 243.68 412.64 T
(Declaration assignments like) 108 384.64 T
3 13 Q
-0.65 (byte foo[bar] = \322\1340\323;) 273.17 384.64 S
2 14 Q
( were modi\336ed to) 423.13 384.64 T
3 13 Q
-0.65 ({\322\1340\323};.) 108 368.64 S
2 14 Q
(The complete set of source code modi\336cations are to numerous to repeat) 108 340.64 T
(here, however) 108 324.64 T
(, the \337avor given above is accurate, and indicates that the task) 186.69 324.64 T
(of porting Oracle was mostly a straight-forward porting task to ANSI C.) 108 308.64 T
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
108 74.02 540 74.02 2 L
7 X
0 K
V
0.25 H
2 Z
0 X
N
108 750.02 540 750.02 2 L
7 X
V
0 Z
0 X
N
108 46.88 324 63 R
7 X
V
0 10 Q
0 X
(Porting Oracle with) 108 56.33 T
0 9 Q
(ANDF) 195.44 56.33 T
108 726.98 540 742.18 R
7 X
V
0 8 Q
0 X
(Pr) 108 736.84 T
(eliminary Conclusions) 116.29 736.84 T
351 45 540 61.12 R
7 X
V
0 10 Q
0 X
(15 of 15) 506.69 54.45 T
108 90 540 711 R
7 X
V
108 691.98 540 695 C
90 693.49 558 693.49 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
1 16 Q
0 X
0 K
(1) 108 700.33 T
(1. Preliminary Conclusions) 115.12 700.33 T
2 14 Q
(It is clear that the coding and porting practice of Oracle Corporation is very) 108 668.64 T
(platform tar) 108 652.64 T
(get dependent, but is indeed separable, and thus amenable to a) 174.2 652.64 T
(fairly straightforward use of the) 108 636.64 T
2 11 Q
(ANDF) 289.47 636.64 T
2 14 Q
( compiler technology) 319.37 636.64 T
(.) 437.38 636.64 T
(W) 108 608.64 T
(e have demonstrated that it is possible to build and execute 4 of the 5) 120.09 608.64 T
(Oracle components entirely with the) 108 592.64 T
2 11 Q
(ANDF) 315.13 592.64 T
2 14 Q
( extended common API presented) 345.03 592.64 T
(herein. The observed performance of these components was the same as the) 108 576.64 T
(natively built version.) 108 560.64 T
(The \336fth component, the) 108 532.64 T
0 F
(Rdbms) 249.85 532.64 T
2 F
(, has also been built except for one source) 292.61 532.64 T
(\336le with the same extended API constructed with the) 108 516.64 T
2 11 Q
(ANDF) 407.63 516.64 T
2 14 Q
( compiler) 437.54 516.64 T
(technology) 108 500.64 T
(. The one source \336le includes header \336les which exhibit a form of) 169.27 500.64 T
(coding practice regarding pre-processor macro de\336nitions for which there) 108 484.64 T
(exist outstanding error reports.) 108 468.64 T
(T) 108 440.64 T
(oken de\336nition libraries shipped with this) 115.57 440.64 T
2 11 Q
(ANDF) 351.89 440.64 T
2 14 Q
( distribution provide the) 381.79 440.64 T
(same resolution as the tar) 108 424.64 T
(get dependent code. In ef) 249.98 424.64 T
(fect, the) 390.77 424.64 T
2 11 Q
(ANDF) 439.34 424.64 T
2 14 Q
( technology) 469.24 424.64 T
-0.56 (abstracts the shape of the source code to be functionally consistent on all such) 108 408.64 P
(platforms without any appreciable performance penalty) 108 392.64 T
(.) 417.57 392.64 T
-0.58 (A suggested way to improve the Oracle source code to accommodate a higher) 108 364.64 P
(degree of portability between a wider set of platforms and architectures is to) 108 348.64 T
(replace tar) 108 332.64 T
(get dependent code with) 166.4 332.64 T
2 11 Q
(ANDF) 306.3 332.64 T
2 14 Q
( tokens via use of the) 336.2 332.64 T
2 11 Q
(ANDF) 458.23 332.64 T
2 14 Q
(technology) 108 316.64 T
(.) 169.27 316.64 T
(Oracle uses an internal performance test suite for its product veri\336cation of) 108 288.64 T
(the major components. This test suite should be used to subject all of the) 108 272.64 T
2 11 Q
(ANDF) 108 256.64 T
2 14 Q
( built components to the same rigorous testing as Oracle products.) 137.9 256.64 T
108 90 540 711 C
108 90 540 207 C
108 90 540 207 R
7 X
0 K
V
2 10 Q
0 X
(Copyright 1993 by Open Software Foundation, Inc.) 108 200.33 T
(All Rights Reserved) 108 178.33 T
-0.19 (Permission to reproduce this document without fee is hereby granted, provided that the copyright notice and) 108 156.33 P
-0.08 (this permission notice appear in all copies or derivative works. OSF MAKES NO W) 108 144.33 P
-0.08 (ARRRANTY OF ANY) 443.36 144.33 P
(KIND WITH REGARD T) 108 132.33 T
(O THIS MA) 213.57 132.33 T
(TERIAL, INCLUDING, BUT NOT LIMITED T) 262.98 132.33 T
(O, THE IMPLIED) 459.05 132.33 T
-0.04 (W) 108 120.33 P
-0.04 (ARRANTIES OF MERCHANT) 116.32 120.33 P
-0.04 (ABILITY AND FITNESS FOR A P) 245.37 120.33 P
-0.04 (AR) 390 120.33 P
-0.04 (TICULAR PURPOSE. OSF shall) 403.28 120.33 P
(not be liable for errors contained herein or for any direct or indirect, incidental, special or consequential) 108 108.33 T
(damages in connection with the furnishing, performance, or use of this material.) 108 96.33 T
108 90 540 711 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "15" 16
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 15 1
%%DocumentFonts: Times-Bold
%%+ Times-BoldItalic
%%+ Times-Roman
%%+ Courier
%%+ Times-Italic
%%+ Courier-Bold
%%+ Courier-Oblique
